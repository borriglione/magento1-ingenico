<?php
/**
 * Netresearch_OPS
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade this extension to
 * newer versions in the future.
 *
 * @copyright Copyright (c) 2016 Netresearch GmbH & Co. KG (http://www.netresearch.de/)
 * @license   Open Software License (OSL 3.0)
 * @link      http://opensource.org/licenses/osl-3.0.php
 */

/**
 * @var Netresearch_OPS_Block_Form_Cc $this
 */
$code = $this->getMethodCode();
?>
<ul class="form-list ops-form-list ops_card"
    id="payment_form_<?php echo $code; ?>"
    style="display:none;">
    <?php if ($this->isAliasEnabled() && $this->isAliasAvailable()) : ?>
        <li>
            <?php echo $this->__(
                'Click %shere%s to select a previously used card.',
                "<a href='#p_method_ops_alias' id='{$code}_token_link'>",
                '</a>'
            );
            ?>
        </li>
    <?php endif; ?>
    <li id="insert_payment_details_<?php echo $code; ?>" class="insert_payment_details">
        <input type="hidden" id="new_alias_<?php echo $code; ?>"/>
        <input type="hidden" name="payment[additional_data][three_ds]" id="threeds_params_<?php echo $code; ?>"/>
        <div id="<?php echo $code; ?>_loader"
             class="ops_htp_loader"
             style="display: none;"></div>
        <iframe id="ops_iframe_<?php echo $code; ?>"
                class="ops_htp_iframe"
                style="display: block;"
                src="about:blank"></iframe>
        <p id="<?php echo $code; ?>_redirect_note"
           class="ops_htp_redirect"
           style="display: none;"><?php echo $this->getRedirectMessage(); ?></p>
    </li>
</ul>

<script type="text/javascript">
    opsHashUrl = '<?php echo $this->getGenerateHashUrl(); ?>';
    opsOrderId = '<?php echo $this->getQuote()->getId(); ?>';
    opsPspid = '<?php echo $this->getPSPID(); ?>';
    opsAcceptUrl = '<?php echo $this->getAliasAcceptUrl(); ?>';
    opsExceptionUrl = '<?php echo $this->getAliasExceptionUrl(); ?>';
    opsUrl = '<?php echo $this->getAliasGatewayUrl(); ?>';
    opsAlias = '';
    paramplus = 'RESPONSEFORMAT=JSON';

    <?php echo $code; ?>RadioButtonClass = '<?php echo $code; ?>_brand_selector';
    <?php echo $code; ?> = {
        'code': '<?php echo $code; ?>',
        'loader': $('<?php echo $code; ?>_loader'),
        'tokenizationFrame': $('ops_iframe_<?php echo $code; ?>'),
        'redirectNote': $('<?php echo $code; ?>_redirect_note'),
        'brandsForAliasInterface': '<?php echo json_encode(
            $this->getMethod()->getBrandsForAliasInterface()
        ); ?>'.evalJSON(),
        'aliasManager': <?php echo $this->getConfig()->isAliasManagerEnabled(
            $this->getMethodCode()
        ) ? 'true' : 'false' ?>,
        'brand': function () {
            return false;
        },
        'paymentMethod': 'CreditCard',
        'htpTemplateName': '<?php echo $this->getHtpTemplateName($code); ?>',
        'transmitPaymentMethod': true
    };
    locale = '<?php echo Mage::app()->getLocale()->getLocaleCode(); ?>';


    $$('.' + <?php echo $code; ?>RadioButtonClass).forEach(function (radioButton) {
        radioButton.observe('click', function () {

        });
    });

    <?php if ($this->isAliasEnabled() && $this->isAliasAvailable()) : ?>
    /**
     * Select token method on click on token link.
     */
    Event.observe(<?php echo $code . '_token_link'; ?>, 'click', function () {
        $('p_method_ops_alias').click();
    });
    <?php endif; ?>

    <?php if ($this->resetAliasSuccess()) : ?>
    payment.opsAliasSuccess = false;
    <?php endif; ?>
    Event.observe(<?php echo $code; ?>.tokenizationFrame, 'load', function () {
        if (typeof payment.onOpsIframeLoad == 'function') {
            payment.onOpsIframeLoad();
        }
    });

    Event.observe(document, 'alias:success', function (event) {
        payment.fillOpsLoader('SUCCESS_TOKEN_FRONTEND');
        if (typeof checkout != 'undefined' && checkout) {
            payment.toggleContinue(true);
        }
        payment.opsAliasSuccess = true;
        $('new_alias_' + payment.currentMethod).value = event.memo;
        $('threeds_params_' + payment.currentMethod).value = JSON.stringify(new MpiParameter().get('<?php echo $this->escapeHtml(
            $this->getAcceptHeader()
        ); ?>'));
        payment.save();
    });

    Event.observe(document, 'alias:failure', function (event) {
        payment.opsAliasSuccess = false;
        payment.currentMethodObject.tokenizationFrame.src = 'about:blank';
        payment.fillOpsLoader('FAILURE_TOKEN_FRONTEND', event.memo);
        if (typeof checkout != 'undefined' && checkout) {
            payment.toggleContinue(false);
        }
    });

    Event.observe(window, 'load', function () {
        payment.handleBrandChange();
    });
</script>
